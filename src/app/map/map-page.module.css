/* src/app/map/map-page.module.css */

/* Root Variables removed. Use variables from globals.css instead. */

.mapPageContainer {
  display: flex;
  flex-direction: column;
  height: 100vh; /* Use 100vh instead of min-height to force full viewport height */
  background-color: var(--bg-light);
}

.mapHeader {
  background-color: var(--color-primary);
  color: white;
  padding: 20px 40px;
  text-align: center;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  flex-shrink: 0; /* Prevent header from shrinking */
}

.mapTitle {
  font-size: 2.5em;
  margin-bottom: 10px;
}

.mapSubtitle {
  font-size: 1.2em;
  opacity: 0.9;
}

.mapContentWrapper {
  display: flex;
  flex: 1;
  height: 100%; /* Ensure it takes full height */
  overflow: hidden;
  /* Remove centering to allow children to take full space */
  align-items: stretch; /* Stretch children to full height */
  /* Remove max-height here if you want it to fill the entire remaining vertical space */
  /* max-height: calc(100vh - 120px); / / This might constrain it too much */
}

/* Sidebar Styling */
.sidebar {
  flex-basis: 320px; /* Fixed width for sidebar */
  min-width: 280px; /* Minimum width to prevent crushing */
  background-color: #fff;
  padding: 25px;
  box-shadow: 2px 0 10px rgba(0, 0, 0, 0.05);
  display: flex;
  flex-direction: column;
  gap: 20px;
  overflow-y: auto; /* Enable scrolling for sidebar content if it gets too long */
  flex-shrink: 0; /* Prevent sidebar from shrinking */
}

.sidebarTitle {
  font-size: 1.6em;
  color: var(--color-dark);
  margin-bottom: 15px;
  padding-bottom: 10px;
  border-bottom: 2px solid var(--bg-light);
}

.wasteCounts {
  display: flex;
  flex-direction: column;
  gap: 12px;
  margin-bottom: 25px;
}

.countCard {
  display: flex;
  align-items: center;
  gap: 10px;
  background-color: var(--bg-light);
  padding: 12px 15px;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.03);
}

.noCountsMessage {
  font-size: 0.9em;
  color: var(--color-text-body);
  text-align: center;
  padding: 10px;
  background-color: #e9ecef;
  border-radius: 5px;
}

.countIcon {
  font-size: 1.5em;
}

.countLabel {
  font-size: 1em;
  color: var(--color-dark);
  font-weight: 500;
}

.countValue {
  font-size: 1.2em;
  font-weight: bold;
  color: var(--color-primary);
  margin-left: auto; /* Push value to the right */
}

.controlsSection {
  display: flex;
  flex-direction: column;
  gap: 15px;
  padding-bottom: 20px;
  border-bottom: 2px solid var(--bg-light);
}

.searchBar {
  position: relative;
}

.searchInput {
  width: 100%;
  padding: 12px 15px 12px 40px; /* Left padding for icon */
  border: 1px solid #ddd;
  border-radius: 8px;
  font-size: 1em;
  box-sizing: border-box; /* Include padding in width */
}

.searchIcon {
  position: absolute;
  left: 15px;
  top: 50%;
  transform: translateY(-50%);
  color: #888;
}

.filterDropdown label {
  display: flex; /* For icon and text alignment */
  align-items: center;
  gap: 8px; /* Adjusted gap */
  font-size: 0.95em;
  color: var(--color-dark);
  margin-bottom: 8px;
}

.selectInput {
  width: 100%;
  padding: 10px 15px;
  border: 1px solid #ddd;
  border-radius: 8px;
  background-color: white;
  font-size: 1em;
  cursor: pointer;
  -webkit-appearance: none; /* Remove default arrow on WebKit browsers */
  -moz-appearance: none; /* Remove default arrow on Firefox */
  appearance: none;
  background-image: url('data:image/svg+xml;charset=UTF-8,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"%3E%3Cpath d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 6.096 6.924 4.682 8.338l4.611 4.612z" fill="%23666"%3E%3C/path%3E%3C/svg%3E'); /* Custom arrow */
  background-repeat: no-repeat;
  background-position: right 10px center;
  background-size: 1em;
}

.addWasteButton {
  background-color: var(--color-accent); /* Blue button */
  color: white;
  padding: 12px 20px;
  border: none;
  border-radius: 8px;
  font-size: 1.1em;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.addWasteButton:hover {
  background-color: color-mix(in srgb, var(--color-accent) 85%, black);
  transform: translateY(-2px);
}

/* Map Section Styling */
.mapSection {
  flex: 1;
  display: flex;
  flex-direction: column;
  height: 100%;
  position: relative; /* Add relative positioning for absolute child positioning */
  /* Remove centering to allow full width utilization */
}

.mapContainer {
  position: absolute; /* Make map container take the full space */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%; /* Take full width of the container */
  height: 100%; /* Take full height of the container */
  /* Remove min-height to let it fill the entire space */
  /* Remove max-width constraint to allow full expansion */
  /* Remove margin to eliminate centering */
  display: flex;
  align-items: stretch; /* Stretch to fill container */
  justify-content: stretch; /* Stretch to fill container */
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

/* This class is applied directly to MapContainer */
.mapComponent {
  width: 100%;
  height: 100%;
  /* Remove min-height to allow full expansion */
}

.errorMessage,
.noListingsMessage {
  position: absolute; /* Position absolutely within the mapSection */
  top: 20px; /* Position from top */
  left: 50%; /* Center horizontally */
  transform: translateX(-50%); /* Center horizontally */
  z-index: 1000; /* Ensure it appears above the map */
  background-color: #fff3cd; /* Light warning yellow */
  color: #856404; /* Dark yellow text */
  border: 1px solid #ffeeba;
  border-radius: 5px;
  padding: 15px 20px;
  width: auto; /* Auto width based on content */
  max-width: 600px; /* Limit width */
  text-align: center;
  font-weight: 500;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15); /* Add shadow for better visibility */
}

/* Custom Marker Icon (for L.divIcon) */
.customMarker {
  /* This class will be applied to the div that contains your SVG icon */
  display: flex;
  justify-content: center;
  align-items: center;
  /* Adjust size as needed. SVG should fill it. */
  width: 28px !important; /* Important to override Leaflet defaults */
  height: 28px !important;
  border-radius: 50%;
  background-color: white; /* White background for the icon circle */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  /* You can add a border or other styles */
  border: 2px solid white; /* Example */
}

.customMarker svg {
  /* Ensure SVG fills the div and is styled */
  width: 100%;
  height: 100%;
}

/* Popup Customization (Leaflet Popups) */
.customPopup .leaflet-popup-content-wrapper {
  border-radius: 10px;
  padding: 0; /* Remove default padding from wrapper */
}

.customPopup .leaflet-popup-content {
  margin: 0; /* Remove default margin */
  padding: 15px; /* Add custom padding */
  text-align: left;
}

.popupContent {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.popupTitle {
  font-size: 1.3em;
  color: var(--color-dark);
  margin-bottom: 5px;
}

.popupDescription {
  font-size: 0.95em;
  color: var(--color-text-body);
  line-height: 1.4;
}

.popupInfo {
  font-size: 0.9em;
  color: #555;
}

.popupInfo strong {
  color: var(--color-dark);
}

.statusAvailable {
  color: var(--status-completed); /* Green */
  font-weight: bold;
}

.statusCollected {
  color: #888; /* Grey for collected */
  font-weight: bold;
  text-decoration: line-through;
}

.collectButton {
  background-color: var(--color-primary); /* Green button */
  color: white;
  padding: 8px 15px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 0.9em;
  display: flex;
  align-items: center;
  gap: 5px;
  justify-content: center;
  margin-top: 10px;
  transition: background-color 0.2s ease;
}

.collectButton:hover {
  background-color: color-mix(in srgb, var(--color-primary) 85%, black);
}

/* Loading and Unauthorized States */
.loadingContainer,
.unauthorizedContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: var(--bg-light);
  color: var(--color-dark);
  text-align: center;
}

.loadingSpinner {
  font-size: 3em;
  color: var(--color-primary);
  animation: spin 1.5s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.loadingText {
  margin-top: 20px;
  font-size: 1.2em;
}

.unauthorizedContainer h1 {
  color: var(--color-danger);
  margin-bottom: 15px;
}

.unauthorizedContainer p {
  font-size: 1.1em;
  margin-bottom: 25px;
}

.loginRedirectButton {
  background-color: var(--color-accent);
  color: white;
  padding: 12px 25px;
  border: none;
  border-radius: 8px;
  font-size: 1em;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.loginRedirectButton:hover {
  background-color: color-mix(in srgb, var(--color-accent) 85%, black);
}

/* Responsive Design */
@media (max-width: 992px) {
  .mapContentWrapper {
    flex-direction: column; /* Stack sidebar and map on smaller screens */
    max-height: unset; /* Remove max-height for stacking */
  }

  .sidebar {
    flex-basis: auto; /* Allow sidebar to take auto height */
    width: 100%;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05); /* Shadow at bottom when stacked */
    order: 2; /* Put sidebar below map on small screens */
    padding: 20px;
  }

  .mapSection {
    flex: 1; /* Ensure map still takes space */
    height: 60vh; /* Give map a fixed height on mobile */
    order: 1; /* Put map above sidebar on small screens */
    /* Remove padding to allow full width utilization */
  }

  .mapContainer {
    /* Change to relative positioning on mobile for better stacking */
    position: relative;
    top: auto;
    left: auto;
    right: auto;
    bottom: auto;
  }

  .mapHeader {
    padding: 15px 20px;
  }
  .mapTitle {
    font-size: 2em;
  }
  .mapSubtitle {
    font-size: 1em;
  }
}

@media (max-width: 600px) {
  .sidebarTitle {
    font-size: 1.4em;
  }
  .countCard {
    padding: 10px 12px;
  }
  .addWasteButton {
    padding: 10px 15px;
    font-size: 1em;
  }
  .searchBar .searchInput {
    padding-left: 35px;
  }
  .searchBar .searchIcon {
    left: 10px;
  }
}
